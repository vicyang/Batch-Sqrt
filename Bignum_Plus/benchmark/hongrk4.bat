@echo off&setlocal enabledelayedexpansion
call :jia %1 %2 P
echo %P%
exit /b

::【有2个标签:jia与:sad.若不会出现两加数的位数差超过488+8=496位的，可把"call :sad %D:9= %"一处改为"for %%i in (%D:9= %)do set E=%%~ni"并把:sad标签删除，这同时还能微微加速。】
:jia
setlocal enabledelayedexpansion&set c1=%1&set c2=%2&set/ac=uh=0&set s=
::c1、c2为加数，c为进位标识符，s储存结果。uh是为了破莫名其妙的":~,-0什么都不取"
for %%i in (1 2)do set "$=!c%%i!#"&set N%%i=0&for %%j in (4608 2304 1152 576 288 144 72 36 18 9)do if !$:~%%j!. NEQ . set/aN%%i+=%%j&set $=!$:~%%j!
::数出c1、c2的长度(去成9的倍数)，分别存在N1、N2。c1或c2未定义时对应值给出0.
if %N1% LEQ %N2% (set/aM=9+N1,N=1%N1%) else set/aM=9+N2,N=1%N2%
::把较小的“伪长度值”，其实就是完整节的数目*9，存到变量N。M就1个用处：后面用来截D
(if %N:~1% NEQ 0 set uh=,-%N:~1%)&for /l %%i in (9 9 %N:~1%)do set/ac=(t=1!c1:~-%%i,9!-2000000000+1!c2:~-%%i,9!+c)/1000000000&set t=00000000!t!&set s=!t:~-9!!s!
::前补1再减是为了除0，免得被当成八进制。此for循环计算结束后，短数尚未参与计算的位数为0-8.长数不确定。全过程可以保证9位相加，从而减少循环中执行的代码量。
set D=0!c%N:~,1%:~,-%M%!&set c1=000000000!c1:~%uh%!&set c2=000000000!c2:~%uh%!&set/ac=(t=1!c1:~-9!-2000000000+1!c2:~-9!+c)/1000000000&(if %N1% NEQ %N2% set t=00000000!t!)&if !t!. NEQ 0. set s=!t:~-9!!s!
::set D前面添0是为了防止未定义问题。这里要取的是长数经2行运算后剩下的部分，也可能根本没有。
::再经一次运算后，短数必结束。因为此行中不能保证9位相加，所以需执行的代码变多。
::if !t!. NEQ 0.中的点，是为了防止Bat把它们当数算(不然000000000=0了)。之所以来这一个检测，是为了防2个数正好都算完了(即节数相同，这是最常见的情况了)的情况，同时也把c处理掉了方便下一行迅速结束。
::有的服Bat的设定，%c2:~,-0%直接什么都不取了。难道不应该是取"总长度-0"位，取全部吗？ 变量uh破此坑。
if %c%==0 endlocal&set %~3=%D:~1%%s%&exit/b
::c=0，下面不用进位了，于是直接把剩下的长数部分堆上去就好。去1位是因为D开头有个补的0
::以下操作的耗时稳定在10ms以下。需要执行下面的，正常需求下貌似不会很多。比如本例。
call :sad %D:9= %&set E=!E: =9!&set/ap=!E:~-1!+1
::call的目的是去末尾空格，联合后一句即为去末尾的9.
::本想用set E=%%~ni来去末空格，但这样最多只能处理488位字符串，超过会出错。其他能用的就只有call法了，无奈之举
::效率差距：call法100次慢约100ms(此数值基本不随运算数长度变化),即1次会慢上1ms.在接受范围内。而且也不是所有都会算到这里
::for循环没有while和do until真是严重差评，中间插goto还不肯马上跳出。不然用循环也是不错的选择
::D自第二位起全为9时，因为第一位固定了0，set/a一步可以把p算成1
set q=!D:%E%=!&if defined q set q=!q:9=0!
::set q是把一串被切掉的原本在末尾的9弄出来变成0.本可以更简单，但未定义时字符串替换的乱搞实在是很气人
endlocal&set %~3=%E:~1,-1%%p%%q%%s%&exit/b
:sad
set E=%*&exit/b

:tt
setlocal&set be=%1:%2
for /f "delims=: tokens=1-6" %%a in ("%be:.=%")do set/at=(%%d-%%a)*360000+(1%%e-1%%b)*6000+1%%f-1%%c,t+=-8640000*("t>>31")
endlocal&set %3=%t%0ms&exit/b